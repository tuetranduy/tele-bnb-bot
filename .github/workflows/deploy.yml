name: Deploy Telegram Bot

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Telegram BnB Bot
    runs-on: ubuntu-latest

    steps:
      - name: setup ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: connect and pull repository
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd tele-bnb-bot && git checkout ${{ secrets.MAIN_BRANCH }} && git pull && exit"
      - name: install pm2
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "npm install pm2@latest -g && exit"
      - name: install dependencies
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd tele-bnb-bot && npm ci && exit"
      - name: setting environment variables
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 
          "cd tele-bnb-bot 
          && rm -rf .env 
          && touch .env 
          && echo BINANCE_API_KEY=${{ secrets.BINANCE_API_KEY }} >> .env 
          && echo BINANCE_API_SECRET=${{ secrets.BINANCE_API_SECRET }} >> .env 
          && echo TELEGRAM_BOT_API_KEY=${{ secrets.TELEGRAM_BOT_API_KEY }} >> .env 
          && echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env 
          && exit"
      - name: stopping bot
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "pm2 delete tele_bnb_bot || true && exit"
      - name: start bot
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd tele-bnb-bot && pm2 start npm --name "tele_bnb_bot" -- start && exit"
